{
  "version": 3,
  "sources": ["../../datatables.net-buttons/js/dataTables.buttons.mjs"],
  "sourcesContent": ["/*! Buttons for DataTables 3.2.5\r\n * Â© SpryMedia Ltd - datatables.net/license\r\n */\r\n\r\nimport jQuery from 'jquery';\r\nimport DataTable from 'datatables.net';\r\n\r\n// Allow reassignment of the $ variable\r\nlet $ = jQuery;\r\n\r\n\r\n// Used for namespacing events added to the document by each instance, so they\r\n// can be removed on destroy\r\nvar _instCounter = 0;\r\n\r\n// Button namespacing counter for namespacing events on individual buttons\r\nvar _buttonCounter = 0;\r\n\r\nvar _dtButtons = DataTable.ext.buttons;\r\n\r\n// Custom entity decoder for data export\r\nvar _entityDecoder = null;\r\n\r\n// Allow for jQuery slim\r\nfunction _fadeIn(el, duration, fn) {\r\n\tif ($.fn.animate) {\r\n\t\tel.stop().fadeIn(duration, fn);\r\n\t}\r\n\telse {\r\n\t\tel.css('display', 'block');\r\n\r\n\t\tif (fn) {\r\n\t\t\tfn.call(el);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction _fadeOut(el, duration, fn) {\r\n\tif ($.fn.animate) {\r\n\t\tel.stop().fadeOut(duration, fn);\r\n\t}\r\n\telse {\r\n\t\tel.css('display', 'none');\r\n\r\n\t\tif (fn) {\r\n\t\t\tfn.call(el);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * [Buttons description]\r\n * @param {[type]}\r\n * @param {[type]}\r\n */\r\nvar Buttons = function (dt, config) {\r\n\tif (!DataTable.versionCheck('2')) {\r\n\t\tthrow 'Warning: Buttons requires DataTables 2 or newer';\r\n\t}\r\n\r\n\t// If not created with a `new` keyword then we return a wrapper function that\r\n\t// will take the settings object for a DT. This allows easy use of new instances\r\n\t// with the `layout` option - e.g. `topLeft: $.fn.dataTable.Buttons( ... )`.\r\n\tif (!(this instanceof Buttons)) {\r\n\t\treturn function (settings) {\r\n\t\t\treturn new Buttons(settings, dt).container();\r\n\t\t};\r\n\t}\r\n\r\n\t// If there is no config set it to an empty object\r\n\tif (typeof config === 'undefined') {\r\n\t\tconfig = {};\r\n\t}\r\n\r\n\t// Allow a boolean true for defaults\r\n\tif (config === true) {\r\n\t\tconfig = {};\r\n\t}\r\n\r\n\t// For easy configuration of buttons an array can be given\r\n\tif (Array.isArray(config)) {\r\n\t\tconfig = { buttons: config };\r\n\t}\r\n\r\n\tthis.c = $.extend(true, {}, Buttons.defaults, config);\r\n\r\n\t// Don't want a deep copy for the buttons\r\n\tif (config.buttons) {\r\n\t\tthis.c.buttons = config.buttons;\r\n\t}\r\n\r\n\tthis.s = {\r\n\t\tdt: new DataTable.Api(dt),\r\n\t\tbuttons: [],\r\n\t\tlistenKeys: '',\r\n\t\tnamespace: 'dtb' + _instCounter++\r\n\t};\r\n\r\n\tthis.dom = {\r\n\t\tcontainer: $('<' + this.c.dom.container.tag + '/>').addClass(\r\n\t\t\tthis.c.dom.container.className\r\n\t\t)\r\n\t};\r\n\r\n\tthis._constructor();\r\n};\r\n\r\n$.extend(Buttons.prototype, {\r\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n\t * Public methods\r\n\t */\r\n\r\n\t/**\r\n\t * Get the action of a button\r\n\t * @param  {int|string} Button index\r\n\t * @return {function}\r\n\t */ /**\r\n\t * Set the action of a button\r\n\t * @param  {node} node Button element\r\n\t * @param  {function} action Function to set\r\n\t * @return {Buttons} Self for chaining\r\n\t */\r\n\taction: function (node, action) {\r\n\t\tvar button = this._nodeToButton(node);\r\n\r\n\t\tif (action === undefined) {\r\n\t\t\treturn button.conf.action;\r\n\t\t}\r\n\r\n\t\tbutton.conf.action = action;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Add an active class to the button to make to look active or get current\r\n\t * active state.\r\n\t * @param  {node} node Button element\r\n\t * @param  {boolean} [flag] Enable / disable flag\r\n\t * @return {Buttons} Self for chaining or boolean for getter\r\n\t */\r\n\tactive: function (node, flag) {\r\n\t\tvar button = this._nodeToButton(node);\r\n\t\tvar klass = this.c.dom.button.active;\r\n\t\tvar jqNode = $(button.node);\r\n\r\n\t\tif (\r\n\t\t\tbutton.inCollection &&\r\n\t\t\tthis.c.dom.collection.button &&\r\n\t\t\tthis.c.dom.collection.button.active !== undefined\r\n\t\t) {\r\n\t\t\tklass = this.c.dom.collection.button.active;\r\n\t\t}\r\n\r\n\t\tif (flag === undefined) {\r\n\t\t\treturn jqNode.hasClass(klass);\r\n\t\t}\r\n\r\n\t\tjqNode.toggleClass(klass, flag === undefined ? true : flag);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Add a new button\r\n\t * @param {object} config Button configuration object, base string name or function\r\n\t * @param {int|string} [idx] Button index for where to insert the button\r\n\t * @param {boolean} [draw=true] Trigger a draw. Set a false when adding\r\n\t *   lots of buttons, until the last button.\r\n\t * @return {Buttons} Self for chaining\r\n\t */\r\n\tadd: function (config, idx, draw) {\r\n\t\tvar buttons = this.s.buttons;\r\n\r\n\t\tif (typeof idx === 'string') {\r\n\t\t\tvar split = idx.split('-');\r\n\t\t\tvar base = this.s;\r\n\r\n\t\t\tfor (var i = 0, ien = split.length - 1; i < ien; i++) {\r\n\t\t\t\tbase = base.buttons[split[i] * 1];\r\n\t\t\t}\r\n\r\n\t\t\tbuttons = base.buttons;\r\n\t\t\tidx = split[split.length - 1] * 1;\r\n\t\t}\r\n\r\n\t\tlet node = this._expandButton(\r\n\t\t\tbuttons,\r\n\t\t\tconfig,\r\n\t\t\tconfig !== undefined ? config.split : undefined,\r\n\t\t\t(config === undefined ||\r\n\t\t\t\tconfig.split === undefined ||\r\n\t\t\t\tconfig.split.length === 0) &&\r\n\t\t\t\tbase !== undefined,\r\n\t\t\tfalse,\r\n\t\t\tidx\r\n\t\t);\r\n\r\n\t\tif (draw === undefined || draw === true) {\r\n\t\t\tthis._draw();\r\n\t\t}\r\n\r\n\t\treturn node;\r\n\t},\r\n\r\n\t/**\r\n\t * Clear buttons from a collection and then insert new buttons\r\n\t */\r\n\tcollectionRebuild: function (node, newButtons) {\r\n\t\tvar button = this._nodeToButton(node);\r\n\r\n\t\tif (newButtons !== undefined) {\r\n\t\t\tvar i;\r\n\t\t\t// Need to reverse the array\r\n\t\t\tfor (i = button.buttons.length - 1; i >= 0; i--) {\r\n\t\t\t\tthis.remove(button.buttons[i].node);\r\n\t\t\t}\r\n\r\n\t\t\t// If the collection has prefix and / or postfix buttons we need to add them in\r\n\t\t\tif (button.conf.prefixButtons) {\r\n\t\t\t\tnewButtons.unshift.apply(newButtons, button.conf.prefixButtons);\r\n\t\t\t}\r\n\r\n\t\t\tif (button.conf.postfixButtons) {\r\n\t\t\t\tnewButtons.push.apply(newButtons, button.conf.postfixButtons);\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < newButtons.length; i++) {\r\n\t\t\t\tvar newBtn = newButtons[i];\r\n\r\n\t\t\t\tthis._expandButton(\r\n\t\t\t\t\tbutton.buttons,\r\n\t\t\t\t\tnewBtn,\r\n\t\t\t\t\tnewBtn !== undefined &&\r\n\t\t\t\t\t\tnewBtn.config !== undefined &&\r\n\t\t\t\t\t\tnewBtn.config.split !== undefined,\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t\tnewBtn.parentConf !== undefined &&\r\n\t\t\t\t\t\tnewBtn.parentConf.split !== undefined,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tnewBtn.parentConf\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._draw(button.collection, button.buttons);\r\n\t},\r\n\r\n\t/**\r\n\t * Get the container node for the buttons\r\n\t * @return {jQuery} Buttons node\r\n\t */\r\n\tcontainer: function () {\r\n\t\treturn this.dom.container;\r\n\t},\r\n\r\n\t/**\r\n\t * Disable a button\r\n\t * @param  {node} node Button node\r\n\t * @return {Buttons} Self for chaining\r\n\t */\r\n\tdisable: function (node) {\r\n\t\tvar button = this._nodeToButton(node);\r\n\r\n\t\tif (button.isSplit) {\r\n\t\t\t$(button.node.childNodes[0])\r\n\t\t\t\t.addClass(this.c.dom.button.disabled)\r\n\t\t\t\t.prop('disabled', true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$(button.node)\r\n\t\t\t\t.addClass(this.c.dom.button.disabled)\r\n\t\t\t\t.prop('disabled', true);\r\n\t\t}\r\n\r\n\t\tbutton.disabled = true;\r\n\r\n\t\tthis._checkSplitEnable();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Destroy the instance, cleaning up event handlers and removing DOM\r\n\t * elements\r\n\t * @return {Buttons} Self for chaining\r\n\t */\r\n\tdestroy: function () {\r\n\t\t// Key event listener\r\n\t\t$('body').off('keyup.' + this.s.namespace);\r\n\r\n\t\t// Individual button destroy (so they can remove their own events if\r\n\t\t// needed). Take a copy as the array is modified by `remove`\r\n\t\tvar buttons = this.s.buttons.slice();\r\n\t\tvar i, ien;\r\n\r\n\t\tfor (i = 0, ien = buttons.length; i < ien; i++) {\r\n\t\t\tthis.remove(buttons[i].node);\r\n\t\t}\r\n\r\n\t\t// Container\r\n\t\tthis.dom.container.remove();\r\n\r\n\t\t// Remove from the settings object collection\r\n\t\tvar buttonInsts = this.s.dt.settings()[0];\r\n\r\n\t\tfor (i = 0, ien = buttonInsts.length; i < ien; i++) {\r\n\t\t\tif (buttonInsts.inst === this) {\r\n\t\t\t\tbuttonInsts.splice(i, 1);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Enable / disable a button\r\n\t * @param  {node} node Button node\r\n\t * @param  {boolean} [flag=true] Enable / disable flag\r\n\t * @return {Buttons} Self for chaining\r\n\t */\r\n\tenable: function (node, flag) {\r\n\t\tif (flag === false) {\r\n\t\t\treturn this.disable(node);\r\n\t\t}\r\n\r\n\t\tvar button = this._nodeToButton(node);\r\n\r\n\t\tif (button.isSplit) {\r\n\t\t\t$(button.node.childNodes[0])\r\n\t\t\t\t.removeClass(this.c.dom.button.disabled)\r\n\t\t\t\t.prop('disabled', false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$(button.node)\r\n\t\t\t\t.removeClass(this.c.dom.button.disabled)\r\n\t\t\t\t.prop('disabled', false);\r\n\t\t}\r\n\r\n\t\tbutton.disabled = false;\r\n\r\n\t\tthis._checkSplitEnable();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Get a button's index\r\n\t *\r\n\t * This is internally recursive\r\n\t * @param {element} node Button to get the index of\r\n\t * @return {string} Button index\r\n\t */\r\n\tindex: function (node, nested, buttons) {\r\n\t\tif (!nested) {\r\n\t\t\tnested = '';\r\n\t\t\tbuttons = this.s.buttons;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\r\n\t\t\tvar inner = buttons[i].buttons;\r\n\r\n\t\t\tif (buttons[i].node === node) {\r\n\t\t\t\treturn nested + i;\r\n\t\t\t}\r\n\r\n\t\t\tif (inner && inner.length) {\r\n\t\t\t\tvar match = this.index(node, i + '-', inner);\r\n\r\n\t\t\t\tif (match !== null) {\r\n\t\t\t\t\treturn match;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the instance name for the button set selector\r\n\t * @return {string} Instance name\r\n\t */\r\n\tname: function () {\r\n\t\treturn this.c.name;\r\n\t},\r\n\r\n\t/**\r\n\t * Get a button's node of the buttons container if no button is given\r\n\t * @param  {node} [node] Button node\r\n\t * @return {jQuery} Button element, or container\r\n\t */\r\n\tnode: function (node) {\r\n\t\tif (!node) {\r\n\t\t\treturn this.dom.container;\r\n\t\t}\r\n\r\n\t\tvar button = this._nodeToButton(node);\r\n\t\treturn $(button.node);\r\n\t},\r\n\r\n\t/**\r\n\t * Set / get a processing class on the selected button\r\n\t * @param {element} node Triggering button node\r\n\t * @param  {boolean} flag true to add, false to remove, undefined to get\r\n\t * @return {boolean|Buttons} Getter value or this if a setter.\r\n\t */\r\n\tprocessing: function (node, flag) {\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar button = this._nodeToButton(node);\r\n\r\n\t\tif (flag === undefined) {\r\n\t\t\treturn $(button.node).hasClass('processing');\r\n\t\t}\r\n\r\n\t\t$(button.node).toggleClass('processing', flag);\r\n\r\n\t\t$(dt.table().node()).triggerHandler('buttons-processing.dt', [\r\n\t\t\tflag,\r\n\t\t\tdt.button(node),\r\n\t\t\tdt,\r\n\t\t\t$(node),\r\n\t\t\tbutton.conf\r\n\t\t]);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Remove a button.\r\n\t * @param  {node} node Button node\r\n\t * @return {Buttons} Self for chaining\r\n\t */\r\n\tremove: function (node) {\r\n\t\tvar button = this._nodeToButton(node);\r\n\t\tvar host = this._nodeToHost(node);\r\n\t\tvar dt = this.s.dt;\r\n\r\n\t\t// Remove any child buttons first\r\n\t\tif (button.buttons.length) {\r\n\t\t\tfor (var i = button.buttons.length - 1; i >= 0; i--) {\r\n\t\t\t\tthis.remove(button.buttons[i].node);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbutton.conf.destroying = true;\r\n\r\n\t\t// Allow the button to remove event handlers, etc\r\n\t\tif (button.conf.destroy) {\r\n\t\t\tbutton.conf.destroy.call(dt.button(node), dt, $(node), button.conf);\r\n\t\t}\r\n\r\n\t\tthis._removeKey(button.conf);\r\n\r\n\t\t$(button.node).remove();\r\n\r\n\t\tif (button.inserter) {\r\n\t\t\t$(button.inserter).remove();\r\n\t\t}\r\n\r\n\t\tvar idx = $.inArray(button, host);\r\n\t\thost.splice(idx, 1);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the text for a button\r\n\t * @param  {int|string} node Button index\r\n\t * @return {string} Button text\r\n\t */ /**\r\n\t * Set the text for a button\r\n\t * @param  {int|string|function} node Button index\r\n\t * @param  {string} label Text\r\n\t * @return {Buttons} Self for chaining\r\n\t */\r\n\ttext: function (node, label) {\r\n\t\tvar button = this._nodeToButton(node);\r\n\t\tvar textNode = button.textNode;\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar jqNode = $(button.node);\r\n\t\tvar text = function (opt) {\r\n\t\t\treturn typeof opt === 'function'\r\n\t\t\t\t? opt(dt, jqNode, button.conf)\r\n\t\t\t\t: opt;\r\n\t\t};\r\n\r\n\t\tif (label === undefined) {\r\n\t\t\treturn text(button.conf.text);\r\n\t\t}\r\n\r\n\t\tbutton.conf.text = label;\r\n\t\ttextNode.html(text(label));\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n\t * Constructor\r\n\t */\r\n\r\n\t/**\r\n\t * Buttons constructor\r\n\t * @private\r\n\t */\r\n\t_constructor: function () {\r\n\t\tvar that = this;\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar dtSettings = dt.settings()[0];\r\n\t\tvar buttons = this.c.buttons;\r\n\r\n\t\tif (!dtSettings._buttons) {\r\n\t\t\tdtSettings._buttons = [];\r\n\t\t}\r\n\r\n\t\tdtSettings._buttons.push({\r\n\t\t\tinst: this,\r\n\t\t\tname: this.c.name\r\n\t\t});\r\n\r\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\r\n\t\t\tthis.add(buttons[i]);\r\n\t\t}\r\n\r\n\t\tdt.on('destroy', function (e, settings) {\r\n\t\t\tif (settings === dtSettings) {\r\n\t\t\t\tthat.destroy();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Global key event binding to listen for button keys\r\n\t\t$('body').on('keyup.' + this.s.namespace, function (e) {\r\n\t\t\tif (\r\n\t\t\t\t!document.activeElement ||\r\n\t\t\t\tdocument.activeElement === document.body\r\n\t\t\t) {\r\n\t\t\t\t// SUse a string of characters for fast lookup of if we need to\r\n\t\t\t\t// handle this\r\n\t\t\t\tvar character = String.fromCharCode(e.keyCode).toLowerCase();\r\n\r\n\t\t\t\tif (that.s.listenKeys.toLowerCase().indexOf(character) !== -1) {\r\n\t\t\t\t\tthat._keypress(character, e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n\t * Private methods\r\n\t */\r\n\r\n\t/**\r\n\t * Add a new button to the key press listener\r\n\t * @param {object} conf Resolved button configuration object\r\n\t * @private\r\n\t */\r\n\t_addKey: function (conf) {\r\n\t\tif (conf.key) {\r\n\t\t\tthis.s.listenKeys += $.isPlainObject(conf.key)\r\n\t\t\t\t? conf.key.key\r\n\t\t\t\t: conf.key;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Insert the buttons into the container. Call without parameters!\r\n\t * @param  {node} [container] Recursive only - Insert point\r\n\t * @param  {array} [buttons] Recursive only - Buttons array\r\n\t * @private\r\n\t */\r\n\t_draw: function (container, buttons) {\r\n\t\tif (!container) {\r\n\t\t\tcontainer = this.dom.container;\r\n\t\t\tbuttons = this.s.buttons;\r\n\t\t}\r\n\r\n\t\tcontainer.children().detach();\r\n\r\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\r\n\t\t\tcontainer.append(buttons[i].inserter);\r\n\t\t\tcontainer.append(' ');\r\n\r\n\t\t\tif (buttons[i].buttons && buttons[i].buttons.length) {\r\n\t\t\t\tthis._draw(buttons[i].collection, buttons[i].buttons);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Create buttons from an array of buttons\r\n\t * @param  {array} attachTo Buttons array to attach to\r\n\t * @param  {object} button Button definition\r\n\t * @param  {boolean} inCollection true if the button is in a collection\r\n\t * @private\r\n\t */\r\n\t_expandButton: function (\r\n\t\tattachTo,\r\n\t\tbutton,\r\n\t\tsplit,\r\n\t\tinCollection,\r\n\t\tinSplit,\r\n\t\tattachPoint,\r\n\t\tparentConf\r\n\t) {\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar isSplit = false;\r\n\t\tvar domCollection = this.c.dom.collection;\r\n\t\tvar buttons = !Array.isArray(button) ? [button] : button;\r\n\t\tvar lastButton;\r\n\r\n\t\tif (button === undefined) {\r\n\t\t\tbuttons = !Array.isArray(split) ? [split] : split;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\r\n\t\t\tvar conf = this._resolveExtends(buttons[i]);\r\n\r\n\t\t\tif (!conf) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tisSplit = conf.config && conf.config.split ? true : false;\r\n\r\n\t\t\t// If the configuration is an array, then expand the buttons at this\r\n\t\t\t// point\r\n\t\t\tif (Array.isArray(conf)) {\r\n\t\t\t\tthis._expandButton(\r\n\t\t\t\t\tattachTo,\r\n\t\t\t\t\tconf,\r\n\t\t\t\t\tbuilt !== undefined && built.conf !== undefined\r\n\t\t\t\t\t\t? built.conf.split\r\n\t\t\t\t\t\t: undefined,\r\n\t\t\t\t\tinCollection,\r\n\t\t\t\t\tparentConf !== undefined && parentConf.split !== undefined,\r\n\t\t\t\t\tattachPoint,\r\n\t\t\t\t\tparentConf\r\n\t\t\t\t);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tvar built = this._buildButton(\r\n\t\t\t\tconf,\r\n\t\t\t\tinCollection,\r\n\t\t\t\tconf.split !== undefined ||\r\n\t\t\t\t\t(conf.config !== undefined &&\r\n\t\t\t\t\t\tconf.config.split !== undefined),\r\n\t\t\t\tinSplit\r\n\t\t\t);\r\n\t\t\tif (!built) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (attachPoint !== undefined && attachPoint !== null) {\r\n\t\t\t\tattachTo.splice(attachPoint, 0, built);\r\n\t\t\t\tattachPoint++;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tattachTo.push(built);\r\n\t\t\t}\r\n\r\n\t\t\t// Any button type can have a drop icon set\r\n\t\t\tif (built.conf.dropIcon && ! built.conf.split) {\r\n\t\t\t\t$(built.node)\r\n\t\t\t\t\t.addClass(this.c.dom.button.dropClass)\r\n\t\t\t\t\t.append(this.c.dom.button.dropHtml);\r\n\t\t\t}\r\n\r\n\t\t\t// Create the dropdown for a collection\r\n\t\t\tif (built.conf.buttons) {\r\n\t\t\t\tbuilt.collection = $(\r\n\t\t\t\t\t'<' + domCollection.container.content.tag + '/>'\r\n\t\t\t\t);\r\n\t\t\t\tbuilt.conf._collection = built.collection;\r\n\r\n\t\t\t\tthis._expandButton(\r\n\t\t\t\t\tbuilt.buttons,\r\n\t\t\t\t\tbuilt.conf.buttons,\r\n\t\t\t\t\tbuilt.conf.split,\r\n\t\t\t\t\t!isSplit,\r\n\t\t\t\t\tisSplit,\r\n\t\t\t\t\tattachPoint,\r\n\t\t\t\t\tbuilt.conf\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// And the split collection\r\n\t\t\tif (built.conf.split) {\r\n\t\t\t\tbuilt.collection = $('<' + domCollection.container.tag + '/>');\r\n\t\t\t\tbuilt.conf._collection = built.collection;\r\n\r\n\t\t\t\tfor (var j = 0; j < built.conf.split.length; j++) {\r\n\t\t\t\t\tvar item = built.conf.split[j];\r\n\r\n\t\t\t\t\tif (typeof item === 'object') {\r\n\t\t\t\t\t\titem.parent = parentConf;\r\n\r\n\t\t\t\t\t\tif (item.collectionLayout === undefined) {\r\n\t\t\t\t\t\t\titem.collectionLayout = built.conf.collectionLayout;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (item.dropup === undefined) {\r\n\t\t\t\t\t\t\titem.dropup = built.conf.dropup;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (item.fade === undefined) {\r\n\t\t\t\t\t\t\titem.fade = built.conf.fade;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._expandButton(\r\n\t\t\t\t\tbuilt.buttons,\r\n\t\t\t\t\tbuilt.conf.buttons,\r\n\t\t\t\t\tbuilt.conf.split,\r\n\t\t\t\t\t!isSplit,\r\n\t\t\t\t\tisSplit,\r\n\t\t\t\t\tattachPoint,\r\n\t\t\t\t\tbuilt.conf\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tbuilt.conf.parent = parentConf;\r\n\r\n\t\t\t// init call is made here, rather than buildButton as it needs to\r\n\t\t\t// be selectable, and for that it needs to be in the buttons array\r\n\t\t\tif (conf.init) {\r\n\t\t\t\tconf.init.call(dt.button(built.node), dt, $(built.node), conf);\r\n\t\t\t}\r\n\r\n\t\t\tlastButton = built.node;\r\n\t\t}\r\n\r\n\t\treturn lastButton;\r\n\t},\r\n\r\n\t/**\r\n\t * Create an individual button\r\n\t * @param  {object} config            Resolved button configuration\r\n\t * @param  {boolean} inCollection `true` if a collection button\r\n\t * @return {object} Completed button description object\r\n\t * @private\r\n\t */\r\n\t_buildButton: function (config, inCollection, isSplit, inSplit) {\r\n\t\tvar that = this;\r\n\t\tvar configDom = this.c.dom;\r\n\t\tvar textNode;\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar setLinerTab = false;\r\n\t\tvar text = function (opt) {\r\n\t\t\treturn typeof opt === 'function' ? opt(dt, button, config) : opt;\r\n\t\t};\r\n\r\n\t\t// Create an object that describes the button which can be in `dom.button`, or\r\n\t\t// `dom.collection.button` or `dom.split.button` or `dom.collection.split.button`!\r\n\t\t// Each should extend from `dom.button`.\r\n\t\tvar dom = $.extend(true, {}, configDom.button);\r\n\r\n\t\tif (inCollection && isSplit && configDom.collection.split) {\r\n\t\t\t$.extend(true, dom, configDom.collection.split.action);\r\n\t\t}\r\n\t\telse if (inSplit || inCollection) {\r\n\t\t\t$.extend(true, dom, configDom.collection.button);\r\n\t\t}\r\n\t\telse if (isSplit) {\r\n\t\t\t$.extend(true, dom, configDom.split.button);\r\n\t\t}\r\n\r\n\t\t// Spacers don't do much other than insert an element into the DOM\r\n\t\tif (config.spacer) {\r\n\t\t\tvar spacer = $('<' + dom.spacer.tag + '/>')\r\n\t\t\t\t.addClass(\r\n\t\t\t\t\t'dt-button-spacer ' +\r\n\t\t\t\t\t\tconfig.style +\r\n\t\t\t\t\t\t' ' +\r\n\t\t\t\t\t\tdom.spacer.className\r\n\t\t\t\t)\r\n\t\t\t\t.html(text(config.text));\r\n\r\n\t\t\treturn {\r\n\t\t\t\tconf: config,\r\n\t\t\t\tnode: spacer,\r\n\t\t\t\tnodeChild: null,\r\n\t\t\t\tinserter: spacer,\r\n\t\t\t\tbuttons: [],\r\n\t\t\t\tinCollection: inCollection,\r\n\t\t\t\tisSplit: isSplit,\r\n\t\t\t\tcollection: null,\r\n\t\t\t\ttextNode: spacer\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Make sure that the button is available based on whatever requirements\r\n\t\t// it has. For example, PDF button require pdfmake\r\n\t\tif (\r\n\t\t\tconfig.available &&\r\n\t\t\t!config.available(dt, config) &&\r\n\t\t\t!config.html\r\n\t\t) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar button;\r\n\r\n\t\tif (!config.html) {\r\n\t\t\tvar run = function (e, dt, button, config, done) {\r\n\t\t\t\tconfig.action.call(dt.button(button), e, dt, button, config, done);\r\n\r\n\t\t\t\t$(dt.table().node()).triggerHandler('buttons-action.dt', [\r\n\t\t\t\t\tdt.button(button),\r\n\t\t\t\t\tdt,\r\n\t\t\t\t\tbutton,\r\n\t\t\t\t\tconfig\r\n\t\t\t\t]);\r\n\t\t\t};\r\n\r\n\t\t\tvar action = function(e, dt, button, config) {\r\n\t\t\t\tif (config.async) {\r\n\t\t\t\t\tthat.processing(button[0], true);\r\n\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\trun(e, dt, button, config, function () {\r\n\t\t\t\t\t\t\tthat.processing(button[0], false);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}, config.async);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\trun(e, dt, button, config, function () {});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar tag = config.tag || dom.tag;\r\n\t\t\tvar clickBlurs =\r\n\t\t\t\tconfig.clickBlurs === undefined ? true : config.clickBlurs;\r\n\r\n\t\t\tbutton = $('<' + tag + '/>')\r\n\t\t\t\t.addClass(dom.className)\r\n\t\t\t\t.attr('aria-controls', this.s.dt.table().node().id)\r\n\t\t\t\t.on('click.dtb', function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\tif (!button.hasClass(dom.disabled) && config.action) {\r\n\t\t\t\t\t\taction(e, dt, button, config);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (clickBlurs) {\r\n\t\t\t\t\t\tbutton.trigger('blur');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keypress.dtb', function (e) {\r\n\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\tif (!button.hasClass(dom.disabled) && config.action) {\r\n\t\t\t\t\t\t\taction(e, dt, button, config);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t// Make `a` tags act like a link\r\n\t\t\tif (tag.toLowerCase() === 'a') {\r\n\t\t\t\tbutton.attr('href', '#');\r\n\t\t\t}\r\n\r\n\t\t\t// Button tags should have `type=button` so they don't have any default behaviour\r\n\t\t\tif (tag.toLowerCase() === 'button') {\r\n\t\t\t\tbutton.attr('type', 'button');\r\n\t\t\t}\r\n\r\n\t\t\tif (dom.liner.tag) {\r\n\t\t\t\tvar lc = dom.liner.tag.toLowerCase();\r\n\t\t\t\tvar liner = $('<' + lc + '/>')\r\n\t\t\t\t\t.html(text(config.text))\r\n\t\t\t\t\t.addClass(dom.liner.className);\r\n\r\n\t\t\t\tif (lc === 'a') {\r\n\t\t\t\t\tliner.attr('href', '#');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (lc === 'a' || lc === 'button') {\r\n\t\t\t\t\tliner.attr('tabindex', this.s.dt.settings()[0].iTabIndex);\r\n\t\t\t\t\tsetLinerTab = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbutton.append(liner);\r\n\t\t\t\ttextNode = liner;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbutton.html(text(config.text));\r\n\t\t\t\ttextNode = button;\r\n\t\t\t}\r\n\r\n\t\t\tif (! setLinerTab) {\r\n\t\t\t\tbutton.attr('tabindex', this.s.dt.settings()[0].iTabIndex)\r\n\t\t\t}\r\n\r\n\t\t\tif (config.enabled === false) {\r\n\t\t\t\tbutton.addClass(dom.disabled);\r\n\t\t\t}\r\n\r\n\t\t\tif (config.className) {\r\n\t\t\t\tbutton.addClass(config.className);\r\n\t\t\t}\r\n\r\n\t\t\tif (config.titleAttr) {\r\n\t\t\t\tbutton.attr('title', text(config.titleAttr));\r\n\t\t\t}\r\n\r\n\t\t\tif (config.attr) {\r\n\t\t\t\tbutton.attr(config.attr);\r\n\t\t\t}\r\n\r\n\t\t\tif (!config.namespace) {\r\n\t\t\t\tconfig.namespace = '.dt-button-' + _buttonCounter++;\r\n\t\t\t}\r\n\r\n\t\t\tif (config.config !== undefined && config.config.split) {\r\n\t\t\t\tconfig.split = config.config.split;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbutton = $(config.html);\r\n\t\t}\r\n\r\n\t\tvar buttonContainer = this.c.dom.buttonContainer;\r\n\t\tvar inserter;\r\n\t\tif (buttonContainer && buttonContainer.tag) {\r\n\t\t\tinserter = $('<' + buttonContainer.tag + '/>')\r\n\t\t\t\t.addClass(buttonContainer.className)\r\n\t\t\t\t.append(button);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinserter = button;\r\n\t\t}\r\n\r\n\t\tthis._addKey(config);\r\n\r\n\t\t// Style integration callback for DOM manipulation\r\n\t\t// Note that this is _not_ documented. It is currently\r\n\t\t// for style integration only\r\n\t\tif (this.c.buttonCreated) {\r\n\t\t\tinserter = this.c.buttonCreated(config, inserter);\r\n\t\t}\r\n\r\n\t\tvar splitDiv;\r\n\r\n\t\tif (isSplit) {\r\n\t\t\tvar dropdownConf = inCollection\r\n\t\t\t\t? $.extend(true, this.c.dom.split, this.c.dom.collection.split)\r\n\t\t\t\t: this.c.dom.split;\r\n\t\t\tvar wrapperConf = dropdownConf.wrapper;\r\n\r\n\t\t\tsplitDiv = $('<' + wrapperConf.tag + '/>')\r\n\t\t\t\t.addClass(wrapperConf.className)\r\n\t\t\t\t.append(button);\r\n\r\n\t\t\tvar dropButtonConfig = $.extend(config, {\r\n\t\t\t\tautoClose: true,\r\n\t\t\t\talign: dropdownConf.dropdown.align,\r\n\t\t\t\tattr: {\r\n\t\t\t\t\t'aria-haspopup': 'dialog',\r\n\t\t\t\t\t'aria-expanded': false\r\n\t\t\t\t},\r\n\t\t\t\tclassName: dropdownConf.dropdown.className,\r\n\t\t\t\tcloseButton: false,\r\n\t\t\t\tsplitAlignClass: dropdownConf.dropdown.splitAlignClass,\r\n\t\t\t\ttext: dropdownConf.dropdown.text\r\n\t\t\t});\r\n\r\n\t\t\tthis._addKey(dropButtonConfig);\r\n\r\n\t\t\tvar splitAction = function (e, dt, button, config) {\r\n\t\t\t\t_dtButtons.split.action.call(\r\n\t\t\t\t\tdt.button(splitDiv),\r\n\t\t\t\t\te,\r\n\t\t\t\t\tdt,\r\n\t\t\t\t\tbutton,\r\n\t\t\t\t\tconfig\r\n\t\t\t\t);\r\n\r\n\t\t\t\t$(dt.table().node()).triggerHandler('buttons-action.dt', [\r\n\t\t\t\t\tdt.button(button),\r\n\t\t\t\t\tdt,\r\n\t\t\t\t\tbutton,\r\n\t\t\t\t\tconfig\r\n\t\t\t\t]);\r\n\t\t\t\tbutton.attr('aria-expanded', true);\r\n\t\t\t};\r\n\r\n\t\t\tvar dropButton = $(\r\n\t\t\t\t'<button class=\"' +\r\n\t\t\t\t\tdropdownConf.dropdown.className +\r\n\t\t\t\t\t' dt-button\"></button>'\r\n\t\t\t)\r\n\t\t\t\t.html(this.c.dom.button.dropHtml)\r\n\t\t\t\t.addClass(this.c.dom.button.dropClass)\r\n\t\t\t\t.on('click.dtb', function (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\r\n\t\t\t\t\tif (!dropButton.hasClass(dom.disabled)) {\r\n\t\t\t\t\t\tsplitAction(e, dt, dropButton, dropButtonConfig);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (clickBlurs) {\r\n\t\t\t\t\t\tdropButton.trigger('blur');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keypress.dtb', function (e) {\r\n\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\t\t\tif (!dropButton.hasClass(dom.disabled)) {\r\n\t\t\t\t\t\t\tsplitAction(e, dt, dropButton, dropButtonConfig);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tif (config.split.length === 0) {\r\n\t\t\t\tdropButton.addClass('dtb-hide-drop');\r\n\t\t\t}\r\n\r\n\t\t\tsplitDiv.append(dropButton).attr(dropButtonConfig.attr);\r\n\t\t}\r\n\r\n\t\tvar node = isSplit ? splitDiv.get(0) : button.get(0);\r\n\r\n\t\treturn {\r\n\t\t\tconf: config,\r\n\t\t\tnode: node,\r\n\t\t\tnodeChild: node && node.children && node.children.length ? node.children[0] : null,\r\n\t\t\tinserter: isSplit ? splitDiv : inserter,\r\n\t\t\tbuttons: [],\r\n\t\t\tinCollection: inCollection,\r\n\t\t\tisSplit: isSplit,\r\n\t\t\tinSplit: inSplit,\r\n\t\t\tcollection: null,\r\n\t\t\ttextNode: textNode\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * Spin over buttons checking if splits should be enabled or not.\r\n\t * @param {*} buttons Array of buttons to check\r\n\t */\r\n\t_checkSplitEnable: function (buttons) {\r\n\t\tif (! buttons) {\r\n\t\t\tbuttons = this.s.buttons;\r\n\t\t}\r\n\r\n\t\tfor (var i=0 ; i<buttons.length ; i++) {\r\n\t\t\tvar button = buttons[i];\r\n\r\n\t\t\t// Check if the button is a split one and if so, determine\r\n\t\t\t// its state\r\n\t\t\tif (button.isSplit) {\r\n\t\t\t\tvar splitBtn = button.node.childNodes[1];\r\n\r\n\t\t\t\tif (this._checkAnyEnabled(button.buttons)) {\r\n\t\t\t\t\t// Enable the split\r\n\t\t\t\t\t$(splitBtn)\r\n\t\t\t\t\t\t.removeClass(this.c.dom.button.disabled)\r\n\t\t\t\t\t\t.prop('disabled', false);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t$(splitBtn)\r\n\t\t\t\t\t\t.addClass(this.c.dom.button.disabled)\r\n\t\t\t\t\t\t.prop('disabled', false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (button.isCollection) {\r\n\t\t\t\t// Nest down into collections\r\n\t\t\t\tthis._checkSplitEnable(button.buttons);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Check an array of buttons and see if any are enabled in it\r\n\t * @param {*} buttons Button array\r\n\t * @returns true if a button is enabled, false otherwise\r\n\t */\r\n\t_checkAnyEnabled: function (buttons) {\r\n\t\tfor (var i=0 ; i<buttons.length ; i++) {\r\n\t\t\tif (! buttons[i].disabled) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/**\r\n\t * Get the button object from a node (recursive)\r\n\t * @param  {node} node Button node\r\n\t * @param  {array} [buttons] Button array, uses base if not defined\r\n\t * @return {object} Button object\r\n\t * @private\r\n\t */\r\n\t_nodeToButton: function (node, buttons) {\r\n\t\tif (!buttons) {\r\n\t\t\tbuttons = this.s.buttons;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\r\n\t\t\tif (buttons[i].node === node || buttons[i].nodeChild === node) {\r\n\t\t\t\treturn buttons[i];\r\n\t\t\t}\r\n\r\n\t\t\tif (buttons[i].buttons.length) {\r\n\t\t\t\tvar ret = this._nodeToButton(node, buttons[i].buttons);\r\n\r\n\t\t\t\tif (ret) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Get container array for a button from a button node (recursive)\r\n\t * @param  {node} node Button node\r\n\t * @param  {array} [buttons] Button array, uses base if not defined\r\n\t * @return {array} Button's host array\r\n\t * @private\r\n\t */\r\n\t_nodeToHost: function (node, buttons) {\r\n\t\tif (!buttons) {\r\n\t\t\tbuttons = this.s.buttons;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\r\n\t\t\tif (buttons[i].node === node) {\r\n\t\t\t\treturn buttons;\r\n\t\t\t}\r\n\r\n\t\t\tif (buttons[i].buttons.length) {\r\n\t\t\t\tvar ret = this._nodeToHost(node, buttons[i].buttons);\r\n\r\n\t\t\t\tif (ret) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Handle a key press - determine if any button's key configured matches\r\n\t * what was typed and trigger the action if so.\r\n\t * @param  {string} character The character pressed\r\n\t * @param  {object} e Key event that triggered this call\r\n\t * @private\r\n\t */\r\n\t_keypress: function (character, e) {\r\n\t\t// Check if this button press already activated on another instance of Buttons\r\n\t\tif (e._buttonsHandled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar run = function (conf, node) {\r\n\t\t\tif (!conf.key) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (conf.key === character) {\r\n\t\t\t\te._buttonsHandled = true;\r\n\t\t\t\t$(node).click();\r\n\t\t\t}\r\n\t\t\telse if ($.isPlainObject(conf.key)) {\r\n\t\t\t\tif (conf.key.key !== character) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (conf.key.shiftKey && !e.shiftKey) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (conf.key.altKey && !e.altKey) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (conf.key.ctrlKey && !e.ctrlKey) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (conf.key.metaKey && !e.metaKey) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Made it this far - it is good\r\n\t\t\t\te._buttonsHandled = true;\r\n\t\t\t\t$(node).click();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar recurse = function (a) {\r\n\t\t\tfor (var i = 0, ien = a.length; i < ien; i++) {\r\n\t\t\t\trun(a[i].conf, a[i].node);\r\n\r\n\t\t\t\tif (a[i].buttons.length) {\r\n\t\t\t\t\trecurse(a[i].buttons);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\trecurse(this.s.buttons);\r\n\t},\r\n\r\n\t/**\r\n\t * Remove a key from the key listener for this instance (to be used when a\r\n\t * button is removed)\r\n\t * @param  {object} conf Button configuration\r\n\t * @private\r\n\t */\r\n\t_removeKey: function (conf) {\r\n\t\tif (conf.key) {\r\n\t\t\tvar character = $.isPlainObject(conf.key) ? conf.key.key : conf.key;\r\n\r\n\t\t\t// Remove only one character, as multiple buttons could have the\r\n\t\t\t// same listening key\r\n\t\t\tvar a = this.s.listenKeys.split('');\r\n\t\t\tvar idx = $.inArray(character, a);\r\n\t\t\ta.splice(idx, 1);\r\n\t\t\tthis.s.listenKeys = a.join('');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Resolve a button configuration\r\n\t * @param  {string|function|object} conf Button config to resolve\r\n\t * @return {object} Button configuration\r\n\t * @private\r\n\t */\r\n\t_resolveExtends: function (conf) {\r\n\t\tvar that = this;\r\n\t\tvar dt = this.s.dt;\r\n\t\tvar i, ien;\r\n\t\tvar toConfObject = function (base) {\r\n\t\t\tvar loop = 0;\r\n\r\n\t\t\t// Loop until we have resolved to a button configuration, or an\r\n\t\t\t// array of button configurations (which will be iterated\r\n\t\t\t// separately)\r\n\t\t\twhile (!$.isPlainObject(base) && !Array.isArray(base)) {\r\n\t\t\t\tif (base === undefined) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof base === 'function') {\r\n\t\t\t\t\tbase = base.call(that, dt, conf);\r\n\r\n\t\t\t\t\tif (!base) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (typeof base === 'string') {\r\n\t\t\t\t\tif (!_dtButtons[base]) {\r\n\t\t\t\t\t\treturn { html: base };\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbase = _dtButtons[base];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tloop++;\r\n\t\t\t\tif (loop > 30) {\r\n\t\t\t\t\t// Protect against misconfiguration killing the browser\r\n\t\t\t\t\tthrow 'Buttons: Too many iterations';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn Array.isArray(base) ? base : $.extend({}, base);\r\n\t\t};\r\n\r\n\t\tconf = toConfObject(conf);\r\n\r\n\t\twhile (conf && conf.extend) {\r\n\t\t\t// Use `toConfObject` in case the button definition being extended\r\n\t\t\t// is itself a string or a function\r\n\t\t\tif (!_dtButtons[conf.extend]) {\r\n\t\t\t\tthrow 'Cannot extend unknown button type: ' + conf.extend;\r\n\t\t\t}\r\n\r\n\t\t\tvar objArray = toConfObject(_dtButtons[conf.extend]);\r\n\t\t\tif (Array.isArray(objArray)) {\r\n\t\t\t\treturn objArray;\r\n\t\t\t}\r\n\t\t\telse if (!objArray) {\r\n\t\t\t\t// This is a little brutal as it might be possible to have a\r\n\t\t\t\t// valid button without the extend, but if there is no extend\r\n\t\t\t\t// then the host button would be acting in an undefined state\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Stash the current class name\r\n\t\t\tvar originalClassName = objArray.className;\r\n\r\n\t\t\tif (conf.config !== undefined && objArray.config !== undefined) {\r\n\t\t\t\tconf.config = $.extend({}, objArray.config, conf.config);\r\n\t\t\t}\r\n\r\n\t\t\tconf = $.extend({}, objArray, conf);\r\n\r\n\t\t\t// The extend will have overwritten the original class name if the\r\n\t\t\t// `conf` object also assigned a class, but we want to concatenate\r\n\t\t\t// them so they are list that is combined from all extended buttons\r\n\t\t\tif (originalClassName && conf.className !== originalClassName) {\r\n\t\t\t\tconf.className = originalClassName + ' ' + conf.className;\r\n\t\t\t}\r\n\r\n\t\t\t// Although we want the `conf` object to overwrite almost all of\r\n\t\t\t// the properties of the object being extended, the `extend`\r\n\t\t\t// property should come from the object being extended\r\n\t\t\tconf.extend = objArray.extend;\r\n\t\t}\r\n\r\n\t\t// Buttons to be added to a collection  -gives the ability to define\r\n\t\t// if buttons should be added to the start or end of a collection\r\n\t\tvar postfixButtons = conf.postfixButtons;\r\n\t\tif (postfixButtons) {\r\n\t\t\tif (!conf.buttons) {\r\n\t\t\t\tconf.buttons = [];\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0, ien = postfixButtons.length; i < ien; i++) {\r\n\t\t\t\tconf.buttons.push(postfixButtons[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar prefixButtons = conf.prefixButtons;\r\n\t\tif (prefixButtons) {\r\n\t\t\tif (!conf.buttons) {\r\n\t\t\t\tconf.buttons = [];\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0, ien = prefixButtons.length; i < ien; i++) {\r\n\t\t\t\tconf.buttons.splice(i, 0, prefixButtons[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn conf;\r\n\t},\r\n\r\n\t/**\r\n\t * Display (and replace if there is an existing one) a popover attached to a button\r\n\t * @param {string|node} content Content to show\r\n\t * @param {DataTable.Api} hostButton DT API instance of the button\r\n\t * @param {object} inOpts Options (see object below for all options)\r\n\t */\r\n\t_popover: function (content, hostButton, inOpts) {\r\n\t\tvar dt = hostButton;\r\n\t\tvar c = this.c;\r\n\t\tvar closed = false;\r\n\t\tvar options = $.extend(\r\n\t\t\t{\r\n\t\t\t\talign: 'button-left', // button-right, dt-container, split-left, split-right\r\n\t\t\t\tautoClose: false,\r\n\t\t\t\tbackground: true,\r\n\t\t\t\tbackgroundClassName: 'dt-button-background',\r\n\t\t\t\tcloseButton: true,\r\n\t\t\t\tcontainerClassName: c.dom.collection.container.className,\r\n\t\t\t\tcontentClassName: c.dom.collection.container.content.className,\r\n\t\t\t\tcollectionLayout: '',\r\n\t\t\t\tcollectionTitle: '',\r\n\t\t\t\tdropup: false,\r\n\t\t\t\tfade: 400,\r\n\t\t\t\tpopoverTitle: '',\r\n\t\t\t\trightAlignClassName: 'dt-button-right',\r\n\t\t\t\ttag: c.dom.collection.container.tag\r\n\t\t\t},\r\n\t\t\tinOpts\r\n\t\t);\r\n\r\n\t\tvar containerSelector =\r\n\t\t\toptions.tag + '.' + options.containerClassName.replace(/ /g, '.');\r\n\t\tvar hostButtonNode = hostButton.node();\r\n\t\tvar hostNode = options.collectionLayout.includes('fixed') ? $('body') : hostButton.node();\r\n\r\n\t\tvar close = function () {\r\n\t\t\tclosed = true;\r\n\r\n\t\t\t_fadeOut($(containerSelector), options.fade, function () {\r\n\t\t\t\t$(this).detach();\r\n\t\t\t});\r\n\r\n\t\t\t$(\r\n\t\t\t\tdt\r\n\t\t\t\t\t.buttons('[aria-haspopup=\"dialog\"][aria-expanded=\"true\"]')\r\n\t\t\t\t\t.nodes()\r\n\t\t\t).attr('aria-expanded', 'false');\r\n\r\n\t\t\t$('div.dt-button-background').off('click.dtb-collection');\r\n\t\t\tButtons.background(\r\n\t\t\t\tfalse,\r\n\t\t\t\toptions.backgroundClassName,\r\n\t\t\t\toptions.fade,\r\n\t\t\t\thostNode\r\n\t\t\t);\r\n\r\n\t\t\t$(window).off('resize.resize.dtb-collection');\r\n\t\t\t$('body').off('.dtb-collection');\r\n\t\t\tdt.off('buttons-action.b-internal');\r\n\t\t\tdt.off('destroy');\r\n\r\n\t\t\t$('body').trigger('buttons-popover-hide.dt');\r\n\t\t};\r\n\r\n\t\tif (content === false) {\r\n\t\t\tclose();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar existingExpanded = $(\r\n\t\t\tdt.buttons('[aria-haspopup=\"dialog\"][aria-expanded=\"true\"]').nodes()\r\n\t\t);\r\n\t\tif (existingExpanded.length) {\r\n\t\t\t// Reuse the current position if the button that was triggered is inside an existing collection\r\n\t\t\tif (hostNode.closest(containerSelector).length) {\r\n\t\t\t\thostNode = existingExpanded.eq(0);\r\n\t\t\t}\r\n\r\n\t\t\tclose();\r\n\t\t}\r\n\r\n\t\t// Sort buttons if defined\r\n\t\tif (options.sort) {\r\n\t\t\tvar elements = $('button', content)\r\n\t\t\t\t.map(function (idx, el) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttext: $(el).text(),\r\n\t\t\t\t\t\tel: el\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t\t.toArray();\r\n\r\n\t\t\telements.sort(function (a, b) {\r\n\t\t\t\treturn a.text.localeCompare(b.text);\r\n\t\t\t});\r\n\r\n\t\t\t$(content).append(elements.map(function (v) {\r\n\t\t\t\treturn v.el;\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\t// Try to be smart about the layout\r\n\t\tvar cnt = $('.dt-button', content).length;\r\n\t\tvar mod = '';\r\n\r\n\t\tif (cnt === 3) {\r\n\t\t\tmod = 'dtb-b3';\r\n\t\t}\r\n\t\telse if (cnt === 2) {\r\n\t\t\tmod = 'dtb-b2';\r\n\t\t}\r\n\t\telse if (cnt === 1) {\r\n\t\t\tmod = 'dtb-b1';\r\n\t\t}\r\n\r\n\t\tvar display = $('<' + options.tag + '/>')\r\n\t\t\t.addClass(options.containerClassName)\r\n\t\t\t.addClass(options.collectionLayout)\r\n\t\t\t.addClass(options.splitAlignClass)\r\n\t\t\t.addClass(mod)\r\n\t\t\t.css('display', 'none')\r\n\t\t\t.attr({\r\n\t\t\t\t'aria-modal': true,\r\n\t\t\t\trole: 'dialog'\r\n\t\t\t});\r\n\r\n\t\tcontent = $(content)\r\n\t\t\t.addClass(options.contentClassName)\r\n\t\t\t.attr('role', 'menu')\r\n\t\t\t.appendTo(display);\r\n\r\n\t\thostButtonNode.attr('aria-expanded', 'true');\r\n\r\n\t\tif (hostNode.parents('body')[0] !== document.body) {\r\n\t\t\thostNode = $(document.body).children('div, section, p').last();\r\n\t\t}\r\n\r\n\t\tif (options.popoverTitle) {\r\n\t\t\tdisplay.prepend(\r\n\t\t\t\t'<div class=\"dt-button-collection-title\">' +\r\n\t\t\t\t\toptions.popoverTitle +\r\n\t\t\t\t\t'</div>'\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (options.collectionTitle) {\r\n\t\t\tdisplay.prepend(\r\n\t\t\t\t'<div class=\"dt-button-collection-title\">' +\r\n\t\t\t\t\toptions.collectionTitle +\r\n\t\t\t\t\t'</div>'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (options.closeButton) {\r\n\t\t\tdisplay\r\n\t\t\t\t.prepend('<div class=\"dtb-popover-close\">&times;</div>')\r\n\t\t\t\t.addClass('dtb-collection-closeable');\r\n\t\t}\r\n\r\n\t\t_fadeIn(display.insertAfter(hostNode), options.fade);\r\n\r\n\t\tvar tableContainer = $(hostButton.table().container());\r\n\t\tvar position = display.css('position');\r\n\r\n\t\tif (options.span === 'container' || options.align === 'dt-container') {\r\n\t\t\thostNode = hostNode.parent();\r\n\t\t\tdisplay.css('width', tableContainer.width());\r\n\t\t}\r\n\r\n\t\t// Align the popover relative to the DataTables container\r\n\t\t// Useful for wide popovers such as SearchPanes\r\n\t\tif (position === 'absolute') {\r\n\t\t\t// Align relative to the host button\r\n\t\t\tvar offsetParent = $(hostNode[0].offsetParent);\r\n\t\t\tvar buttonPosition = hostNode.position();\r\n\t\t\tvar buttonOffset = hostNode.offset();\r\n\t\t\tvar tableSizes = offsetParent.offset();\r\n\t\t\tvar containerPosition = offsetParent.position();\r\n\t\t\tvar computed = window.getComputedStyle(offsetParent[0]);\r\n\r\n\t\t\ttableSizes.height = offsetParent.outerHeight();\r\n\t\t\ttableSizes.width =\r\n\t\t\t\toffsetParent.width() + parseFloat(computed.paddingLeft);\r\n\t\t\ttableSizes.right = tableSizes.left + tableSizes.width;\r\n\t\t\ttableSizes.bottom = tableSizes.top + tableSizes.height;\r\n\r\n\t\t\t// Set the initial position so we can read height / width\r\n\t\t\tvar top = buttonPosition.top + hostNode.outerHeight();\r\n\t\t\tvar left = buttonPosition.left;\r\n\r\n\t\t\tdisplay.css({\r\n\t\t\t\ttop: top,\r\n\t\t\t\tleft: left\r\n\t\t\t});\r\n\r\n\t\t\t// Get the popover position\r\n\t\t\tcomputed = window.getComputedStyle(display[0]);\r\n\t\t\tvar popoverSizes = display.offset();\r\n\r\n\t\t\tpopoverSizes.height = display.outerHeight();\r\n\t\t\tpopoverSizes.width = display.outerWidth();\r\n\t\t\tpopoverSizes.right = popoverSizes.left + popoverSizes.width;\r\n\t\t\tpopoverSizes.bottom = popoverSizes.top + popoverSizes.height;\r\n\t\t\tpopoverSizes.marginTop = parseFloat(computed.marginTop);\r\n\t\t\tpopoverSizes.marginBottom = parseFloat(computed.marginBottom);\r\n\r\n\t\t\t// First position per the class requirements - pop up and right align\r\n\t\t\tif (options.dropup) {\r\n\t\t\t\ttop =\r\n\t\t\t\t\tbuttonPosition.top -\r\n\t\t\t\t\tpopoverSizes.height -\r\n\t\t\t\t\tpopoverSizes.marginTop -\r\n\t\t\t\t\tpopoverSizes.marginBottom;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\toptions.align === 'button-right' ||\r\n\t\t\t\tdisplay.hasClass(options.rightAlignClassName)\r\n\t\t\t) {\r\n\t\t\t\tleft =\r\n\t\t\t\t\tbuttonPosition.left -\r\n\t\t\t\t\tpopoverSizes.width +\r\n\t\t\t\t\thostNode.outerWidth();\r\n\t\t\t}\r\n\r\n\t\t\t// Container alignment - make sure it doesn't overflow the table container\r\n\t\t\tif (\r\n\t\t\t\toptions.align === 'dt-container' ||\r\n\t\t\t\toptions.align === 'container'\r\n\t\t\t) {\r\n\t\t\t\tif (left < buttonPosition.left) {\r\n\t\t\t\t\tleft = -buttonPosition.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Window adjustment\r\n\t\t\tif (\r\n\t\t\t\tcontainerPosition.left + left + popoverSizes.width >\r\n\t\t\t\t$(window).width()\r\n\t\t\t) {\r\n\t\t\t\t// Overflowing the document to the right\r\n\t\t\t\tleft =\r\n\t\t\t\t\t$(window).width() -\r\n\t\t\t\t\tpopoverSizes.width -\r\n\t\t\t\t\tcontainerPosition.left;\r\n\t\t\t}\r\n\r\n\t\t\tif (buttonOffset.left + left < 0) {\r\n\t\t\t\t// Off to the left of the document\r\n\t\t\t\tleft = -buttonOffset.left;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\tcontainerPosition.top + top + popoverSizes.height >\r\n\t\t\t\t$(window).height() + $(window).scrollTop()\r\n\t\t\t) {\r\n\t\t\t\t// Pop up if otherwise we'd need the user to scroll down\r\n\t\t\t\ttop =\r\n\t\t\t\t\tbuttonPosition.top -\r\n\t\t\t\t\tpopoverSizes.height -\r\n\t\t\t\t\tpopoverSizes.marginTop -\r\n\t\t\t\t\tpopoverSizes.marginBottom;\r\n\t\t\t}\r\n\r\n\t\t\tif (offsetParent.offset().top + top < $(window).scrollTop()) {\r\n\t\t\t\t// Correction for when the top is beyond the top of the page\r\n\t\t\t\ttop = buttonPosition.top + hostNode.outerHeight();\r\n\t\t\t}\r\n\r\n\t\t\t// Calculations all done - now set it\r\n\t\t\tdisplay.css({\r\n\t\t\t\ttop: top,\r\n\t\t\t\tleft: left\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Fix position - centre on screen\r\n\t\t\tvar place = function () {\r\n\t\t\t\tvar half = $(window).height() / 2;\r\n\r\n\t\t\t\tvar top = display.height() / 2;\r\n\t\t\t\tif (top > half) {\r\n\t\t\t\t\ttop = half;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdisplay.css('marginTop', top * -1);\r\n\t\t\t};\r\n\r\n\t\t\tplace();\r\n\r\n\t\t\t$(window).on('resize.dtb-collection', function () {\r\n\t\t\t\tplace();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (options.background) {\r\n\t\t\tButtons.background(\r\n\t\t\t\ttrue,\r\n\t\t\t\toptions.backgroundClassName,\r\n\t\t\t\toptions.fade,\r\n\t\t\t\toptions.backgroundHost || hostNode\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// This is bonkers, but if we don't have a click listener on the\r\n\t\t// background element, iOS Safari will ignore the body click\r\n\t\t// listener below. An empty function here is all that is\r\n\t\t// required to make it work...\r\n\t\t$('div.dt-button-background').on(\r\n\t\t\t'click.dtb-collection',\r\n\t\t\tfunction () {}\r\n\t\t);\r\n\r\n\t\tif (options.autoClose) {\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tdt.on('buttons-action.b-internal', function (e, btn, dt, node) {\r\n\t\t\t\t\tif (node[0] === hostNode[0]) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclose();\r\n\t\t\t\t});\r\n\t\t\t}, 0);\r\n\t\t}\r\n\r\n\t\t$(display).trigger('buttons-popover.dt');\r\n\r\n\t\tdt.on('destroy', close);\r\n\r\n\t\tsetTimeout(function () {\r\n\t\t\tclosed = false;\r\n\t\t\t$('body')\r\n\t\t\t\t.on('click.dtb-collection', function (e) {\r\n\t\t\t\t\tif (closed) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// andSelf is deprecated in jQ1.8, but we want 1.7 compat\r\n\t\t\t\t\tvar back = $.fn.addBack ? 'addBack' : 'andSelf';\r\n\t\t\t\t\tvar parent = $(e.target).parent()[0];\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(!$(e.target).parents()[back]().filter(content)\r\n\t\t\t\t\t\t\t.length &&\r\n\t\t\t\t\t\t\t!$(parent).hasClass('dt-buttons')) ||\r\n\t\t\t\t\t\t$(e.target).hasClass('dt-button-background')\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tclose();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keyup.dtb-collection', function (e) {\r\n\t\t\t\t\tif (e.keyCode === 27) {\r\n\t\t\t\t\t\tclose();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.on('keydown.dtb-collection', function (e) {\r\n\t\t\t\t\t// Focus trap for tab key\r\n\t\t\t\t\tvar elements = $('a, button', content);\r\n\t\t\t\t\tvar active = document.activeElement;\r\n\r\n\t\t\t\t\tif (e.keyCode !== 9) {\r\n\t\t\t\t\t\t// tab\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (elements.index(active) === -1) {\r\n\t\t\t\t\t\t// If current focus is not inside the popover\r\n\t\t\t\t\t\telements.first().focus();\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (e.shiftKey) {\r\n\t\t\t\t\t\t// Reverse tabbing order when shift key is pressed\r\n\t\t\t\t\t\tif (active === elements[0]) {\r\n\t\t\t\t\t\t\telements.last().focus();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (active === elements.last()[0]) {\r\n\t\t\t\t\t\t\telements.first().focus();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}, 0);\r\n\t}\r\n});\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * Statics\r\n */\r\n\r\n/**\r\n * Show / hide a background layer behind a collection\r\n * @param  {boolean} Flag to indicate if the background should be shown or\r\n *   hidden\r\n * @param  {string} Class to assign to the background\r\n * @static\r\n */\r\nButtons.background = function (show, className, fade, insertPoint) {\r\n\tif (fade === undefined) {\r\n\t\tfade = 400;\r\n\t}\r\n\tif (!insertPoint) {\r\n\t\tinsertPoint = document.body;\r\n\t}\r\n\r\n\tif (show) {\r\n\t\t_fadeIn(\r\n\t\t\t$('<div/>')\r\n\t\t\t\t.addClass(className)\r\n\t\t\t\t.css('display', 'none')\r\n\t\t\t\t.insertAfter(insertPoint),\r\n\t\t\tfade\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\t_fadeOut($('div.' + className), fade, function () {\r\n\t\t\t$(this).removeClass(className).remove();\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/**\r\n * Instance selector - select Buttons instances based on an instance selector\r\n * value from the buttons assigned to a DataTable. This is only useful if\r\n * multiple instances are attached to a DataTable.\r\n * @param  {string|int|array} Instance selector - see `instance-selector`\r\n *   documentation on the DataTables site\r\n * @param  {array} Button instance array that was attached to the DataTables\r\n *   settings object\r\n * @return {array} Buttons instances\r\n * @static\r\n */\r\nButtons.instanceSelector = function (group, buttons) {\r\n\tif (group === undefined || group === null) {\r\n\t\treturn $.map(buttons, function (v) {\r\n\t\t\treturn v.inst;\r\n\t\t});\r\n\t}\r\n\r\n\tvar ret = [];\r\n\tvar names = $.map(buttons, function (v) {\r\n\t\treturn v.name;\r\n\t});\r\n\r\n\t// Flatten the group selector into an array of single options\r\n\tvar process = function (input) {\r\n\t\tif (Array.isArray(input)) {\r\n\t\t\tfor (var i = 0, ien = input.length; i < ien; i++) {\r\n\t\t\t\tprocess(input[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof input === 'string') {\r\n\t\t\tif (input.indexOf(',') !== -1) {\r\n\t\t\t\t// String selector, list of names\r\n\t\t\t\tprocess(input.split(','));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// String selector individual name\r\n\t\t\t\tvar idx = $.inArray(input.trim(), names);\r\n\r\n\t\t\t\tif (idx !== -1) {\r\n\t\t\t\t\tret.push(buttons[idx].inst);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (typeof input === 'number') {\r\n\t\t\t// Index selector\r\n\t\t\tret.push(buttons[input].inst);\r\n\t\t}\r\n\t\telse if (typeof input === 'object' && input.nodeName) {\r\n\t\t\t// Element selector\r\n\t\t\tfor (var j = 0; j < buttons.length; j++) {\r\n\t\t\t\tif (buttons[j].inst.dom.container[0] === input) {\r\n\t\t\t\t\tret.push(buttons[j].inst);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (typeof input === 'object') {\r\n\t\t\t// Actual instance selector\r\n\t\t\tret.push(input);\r\n\t\t}\r\n\t};\r\n\r\n\tprocess(group);\r\n\r\n\treturn ret;\r\n};\r\n\r\n/**\r\n * Button selector - select one or more buttons from a selector input so some\r\n * operation can be performed on them.\r\n * @param  {array} Button instances array that the selector should operate on\r\n * @param  {string|int|node|jQuery|array} Button selector - see\r\n *   `button-selector` documentation on the DataTables site\r\n * @return {array} Array of objects containing `inst` and `idx` properties of\r\n *   the selected buttons so you know which instance each button belongs to.\r\n * @static\r\n */\r\nButtons.buttonSelector = function (insts, selector) {\r\n\tvar ret = [];\r\n\tvar nodeBuilder = function (a, buttons, baseIdx) {\r\n\t\tvar button;\r\n\t\tvar idx;\r\n\r\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\r\n\t\t\tbutton = buttons[i];\r\n\r\n\t\t\tif (button) {\r\n\t\t\t\tidx = baseIdx !== undefined ? baseIdx + i : i + '';\r\n\r\n\t\t\t\ta.push({\r\n\t\t\t\t\tnode: button.node,\r\n\t\t\t\t\tname: button.conf.name,\r\n\t\t\t\t\tidx: idx\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (button.buttons) {\r\n\t\t\t\t\tnodeBuilder(a, button.buttons, idx + '-');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar run = function (selector, inst) {\r\n\t\tvar i, ien;\r\n\t\tvar buttons = [];\r\n\t\tnodeBuilder(buttons, inst.s.buttons);\r\n\r\n\t\tvar nodes = $.map(buttons, function (v) {\r\n\t\t\treturn v.node;\r\n\t\t});\r\n\r\n\t\tif (Array.isArray(selector) || selector instanceof $) {\r\n\t\t\tfor (i = 0, ien = selector.length; i < ien; i++) {\r\n\t\t\t\trun(selector[i], inst);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (selector === null || selector === undefined || selector === '*') {\r\n\t\t\t// Select all\r\n\t\t\tfor (i = 0, ien = buttons.length; i < ien; i++) {\r\n\t\t\t\tret.push({\r\n\t\t\t\t\tinst: inst,\r\n\t\t\t\t\tnode: buttons[i].node\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (typeof selector === 'number') {\r\n\t\t\t// Main button index selector\r\n\t\t\tif (inst.s.buttons[selector]) {\r\n\t\t\t\tret.push({\r\n\t\t\t\t\tinst: inst,\r\n\t\t\t\t\tnode: inst.s.buttons[selector].node\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (typeof selector === 'string') {\r\n\t\t\tif (selector.indexOf(',') !== -1) {\r\n\t\t\t\t// Split\r\n\t\t\t\tvar a = selector.split(',');\r\n\r\n\t\t\t\tfor (i = 0, ien = a.length; i < ien; i++) {\r\n\t\t\t\t\trun(a[i].trim(), inst);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (selector.match(/^\\d+(\\-\\d+)*$/)) {\r\n\t\t\t\t// Sub-button index selector\r\n\t\t\t\tvar indexes = $.map(buttons, function (v) {\r\n\t\t\t\t\treturn v.idx;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tret.push({\r\n\t\t\t\t\tinst: inst,\r\n\t\t\t\t\tnode: buttons[$.inArray(selector, indexes)].node\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (selector.indexOf(':name') !== -1) {\r\n\t\t\t\t// Button name selector\r\n\t\t\t\tvar name = selector.replace(':name', '');\r\n\r\n\t\t\t\tfor (i = 0, ien = buttons.length; i < ien; i++) {\r\n\t\t\t\t\tif (buttons[i].name === name) {\r\n\t\t\t\t\t\tret.push({\r\n\t\t\t\t\t\t\tinst: inst,\r\n\t\t\t\t\t\t\tnode: buttons[i].node\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// jQuery selector on the nodes\r\n\t\t\t\t$(nodes)\r\n\t\t\t\t\t.filter(selector)\r\n\t\t\t\t\t.each(function () {\r\n\t\t\t\t\t\tret.push({\r\n\t\t\t\t\t\t\tinst: inst,\r\n\t\t\t\t\t\t\tnode: this\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (typeof selector === 'object' && selector.nodeName) {\r\n\t\t\t// Node selector\r\n\t\t\tvar idx = $.inArray(selector, nodes);\r\n\r\n\t\t\tif (idx !== -1) {\r\n\t\t\t\tret.push({\r\n\t\t\t\t\tinst: inst,\r\n\t\t\t\t\tnode: nodes[idx]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tfor (var i = 0, ien = insts.length; i < ien; i++) {\r\n\t\tvar inst = insts[i];\r\n\r\n\t\trun(selector, inst);\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n\r\n/**\r\n * Default function used for formatting output data.\r\n * @param {*} str Data to strip\r\n */\r\nButtons.stripData = function (str, config) {\r\n\t// If the input is an HTML element, we can use the HTML from it (HTML might be stripped below).\r\n\tif (str !== null && typeof str === 'object' && str.nodeName && str.nodeType) {\r\n\t\tstr = str.innerHTML;\r\n\t}\r\n\r\n\tif (typeof str !== 'string') {\r\n\t\treturn str;\r\n\t}\r\n\r\n\t// Always remove script tags\r\n\tstr = Buttons.stripHtmlScript(str);\r\n\r\n\t// Always remove comments\r\n\tstr = Buttons.stripHtmlComments(str);\r\n\r\n\tif (!config || config.stripHtml) {\r\n\t\tstr = DataTable.util.stripHtml(str);\r\n\t}\r\n\r\n\tif (!config || config.trim) {\r\n\t\tstr = str.trim();\r\n\t}\r\n\r\n\tif (!config || config.stripNewlines) {\r\n\t\tstr = str.replace(/\\n/g, ' ');\r\n\t}\r\n\r\n\tif (!config || config.decodeEntities) {\r\n\t\tif (_entityDecoder) {\r\n\t\t\tstr = _entityDecoder(str);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t_exportTextarea.innerHTML = str;\r\n\t\t\tstr = _exportTextarea.value;\r\n\t\t}\r\n\t}\r\n\r\n\t// Prevent Excel from running a formula\r\n\tif (!config || config.escapeExcelFormula) {\r\n\t\tif (str.match(/^[=@\\t\\r]/)) {\r\n\t\t\tstr = \"'\" + str;\r\n\t\t}\r\n\t}\r\n\r\n\treturn str;\r\n};\r\n\r\n/**\r\n * Provide a custom entity decoding function - e.g. a regex one, which can be\r\n * much faster than the built in DOM option, but also larger code size.\r\n * @param {function} fn\r\n */\r\nButtons.entityDecoder = function (fn) {\r\n\t_entityDecoder = fn;\r\n};\r\n\r\n/**\r\n * Common function for stripping HTML comments\r\n *\r\n * @param {*} input \r\n * @returns \r\n */\r\nButtons.stripHtmlComments = function (input) {\r\n\tvar previous;  \r\n\t\r\n\tdo {  \r\n\t\tprevious = input;\r\n\t\tinput = input.replace(/(<!--.*?--!?>)|(<!--[\\S\\s]+?--!?>)|(<!--[\\S\\s]*?$)/g, '');\r\n\t} while (input !== previous);  \r\n\r\n\treturn input;  \r\n};\r\n\r\n/**\r\n * Common function for stripping HTML script tags\r\n *\r\n * @param {*} input \r\n * @returns \r\n */\r\nButtons.stripHtmlScript = function (input) {\r\n\tvar previous;  \r\n\t\r\n\tdo {  \r\n\t\tprevious = input;\r\n\t\tinput = input.replace(/<script\\b[^<]*(?:(?!<\\/script[^>]*>)<[^<]*)*<\\/script[^>]*>/gi, '');\r\n\t} while (input !== previous);  \r\n\r\n\treturn input;  \r\n};\r\n\r\n/**\r\n * Buttons defaults. For full documentation, please refer to the docs/option\r\n * directory or the DataTables site.\r\n * @type {Object}\r\n * @static\r\n */\r\nButtons.defaults = {\r\n\tbuttons: ['copy', 'excel', 'csv', 'pdf', 'print'],\r\n\tname: 'main',\r\n\ttabIndex: 0,\r\n\tdom: {\r\n\t\tcontainer: {\r\n\t\t\ttag: 'div',\r\n\t\t\tclassName: 'dt-buttons'\r\n\t\t},\r\n\t\tcollection: {\r\n\t\t\tcontainer: {\r\n\t\t\t\t// The element used for the dropdown\r\n\t\t\t\tclassName: 'dt-button-collection',\r\n\t\t\t\tcontent: {\r\n\t\t\t\t\tclassName: '',\r\n\t\t\t\t\ttag: 'div'\r\n\t\t\t\t},\r\n\t\t\t\ttag: 'div'\r\n\t\t\t}\r\n\t\t\t// optionally\r\n\t\t\t// , button: IButton - buttons inside the collection container\r\n\t\t\t// , split: ISplit - splits inside the collection container\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\ttag: 'button',\r\n\t\t\tclassName: 'dt-button',\r\n\t\t\tactive: 'dt-button-active', // class name\r\n\t\t\tdisabled: 'disabled', // class name\r\n\t\t\tspacer: {\r\n\t\t\t\tclassName: 'dt-button-spacer',\r\n\t\t\t\ttag: 'span'\r\n\t\t\t},\r\n\t\t\tliner: {\r\n\t\t\t\ttag: 'span',\r\n\t\t\t\tclassName: ''\r\n\t\t\t},\r\n\t\t\tdropClass: '',\r\n\t\t\tdropHtml: '<span class=\"dt-button-down-arrow\">&#x25BC;</span>'\r\n\t\t},\r\n\t\tsplit: {\r\n\t\t\taction: {\r\n\t\t\t\t// action button\r\n\t\t\t\tclassName: 'dt-button-split-drop-button dt-button',\r\n\t\t\t\ttag: 'button'\r\n\t\t\t},\r\n\t\t\tdropdown: {\r\n\t\t\t\t// button to trigger the dropdown\r\n\t\t\t\talign: 'split-right',\r\n\t\t\t\tclassName: 'dt-button-split-drop',\r\n\t\t\t\tsplitAlignClass: 'dt-button-split-left',\r\n\t\t\t\ttag: 'button'\r\n\t\t\t},\r\n\t\t\twrapper: {\r\n\t\t\t\t// wrap around both\r\n\t\t\t\tclassName: 'dt-button-split',\r\n\t\t\t\ttag: 'div'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * Version information\r\n * @type {string}\r\n * @static\r\n */\r\nButtons.version = '3.2.5';\r\n\r\n$.extend(_dtButtons, {\r\n\tcollection: {\r\n\t\ttext: function (dt) {\r\n\t\t\treturn dt.i18n('buttons.collection', 'Collection');\r\n\t\t},\r\n\t\tclassName: 'buttons-collection',\r\n\t\tcloseButton: false,\r\n\t\tdropIcon: true,\r\n\t\tinit: function (dt, button) {\r\n\t\t\tbutton.attr('aria-expanded', false);\r\n\t\t},\r\n\t\taction: function (e, dt, button, config) {\r\n\t\t\tif (config._collection.parents('body').length) {\r\n\t\t\t\tthis.popover(false, config);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.popover(config._collection, config);\r\n\t\t\t}\r\n\r\n\t\t\t// When activated using a key - auto focus on the\r\n\t\t\t// first item in the popover\r\n\t\t\tif (e.type === 'keypress') {\r\n\t\t\t\t$('a, button', config._collection).eq(0).focus();\r\n\t\t\t}\r\n\t\t},\r\n\t\tattr: {\r\n\t\t\t'aria-haspopup': 'dialog'\r\n\t\t}\r\n\t\t// Also the popover options, defined in Buttons.popover\r\n\t},\r\n\tsplit: {\r\n\t\ttext: function (dt) {\r\n\t\t\treturn dt.i18n('buttons.split', 'Split');\r\n\t\t},\r\n\t\tclassName: 'buttons-split',\r\n\t\tcloseButton: false,\r\n\t\tinit: function (dt, button) {\r\n\t\t\treturn button.attr('aria-expanded', false);\r\n\t\t},\r\n\t\taction: function (e, dt, button, config) {\r\n\t\t\tthis.popover(config._collection, config);\r\n\t\t},\r\n\t\tattr: {\r\n\t\t\t'aria-haspopup': 'dialog'\r\n\t\t}\r\n\t\t// Also the popover options, defined in Buttons.popover\r\n\t},\r\n\tcopy: function () {\r\n\t\tif (_dtButtons.copyHtml5) {\r\n\t\t\treturn 'copyHtml5';\r\n\t\t}\r\n\t},\r\n\tcsv: function (dt, conf) {\r\n\t\tif (_dtButtons.csvHtml5 && _dtButtons.csvHtml5.available(dt, conf)) {\r\n\t\t\treturn 'csvHtml5';\r\n\t\t}\r\n\t},\r\n\texcel: function (dt, conf) {\r\n\t\tif (\r\n\t\t\t_dtButtons.excelHtml5 &&\r\n\t\t\t_dtButtons.excelHtml5.available(dt, conf)\r\n\t\t) {\r\n\t\t\treturn 'excelHtml5';\r\n\t\t}\r\n\t},\r\n\tpdf: function (dt, conf) {\r\n\t\tif (_dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available(dt, conf)) {\r\n\t\t\treturn 'pdfHtml5';\r\n\t\t}\r\n\t},\r\n\tpageLength: function (dt) {\r\n\t\tvar lengthMenu = dt.settings()[0].aLengthMenu;\r\n\t\tvar vals = [];\r\n\t\tvar lang = [];\r\n\t\tvar text = function (dt) {\r\n\t\t\treturn dt.i18n(\r\n\t\t\t\t'buttons.pageLength',\r\n\t\t\t\t{\r\n\t\t\t\t\t'-1': 'Show all rows',\r\n\t\t\t\t\t_: 'Show %d rows'\r\n\t\t\t\t},\r\n\t\t\t\tdt.page.len()\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\t// Support for DataTables 1.x 2D array\r\n\t\tif (Array.isArray(lengthMenu[0])) {\r\n\t\t\tvals = lengthMenu[0];\r\n\t\t\tlang = lengthMenu[1];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (var i = 0; i < lengthMenu.length; i++) {\r\n\t\t\t\tvar option = lengthMenu[i];\r\n\r\n\t\t\t\t// Support for DataTables 2 object in the array\r\n\t\t\t\tif ($.isPlainObject(option)) {\r\n\t\t\t\t\tvals.push(option.value);\r\n\t\t\t\t\tlang.push(option.label);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvals.push(option);\r\n\t\t\t\t\tlang.push(option);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\textend: 'collection',\r\n\t\t\ttext: text,\r\n\t\t\tclassName: 'buttons-page-length',\r\n\t\t\tautoClose: true,\r\n\t\t\tbuttons: $.map(vals, function (val, i) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttext: lang[i],\r\n\t\t\t\t\tclassName: 'button-page-length',\r\n\t\t\t\t\taction: function (e, dt) {\r\n\t\t\t\t\t\tdt.page.len(val).draw();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinit: function (dt, node, conf) {\r\n\t\t\t\t\t\tvar that = this;\r\n\t\t\t\t\t\tvar fn = function () {\r\n\t\t\t\t\t\t\tthat.active(dt.page.len() === val);\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tdt.on('length.dt' + conf.namespace, fn);\r\n\t\t\t\t\t\tfn();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdestroy: function (dt, node, conf) {\r\n\t\t\t\t\t\tdt.off('length.dt' + conf.namespace);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}),\r\n\t\t\tinit: function (dt, node, conf) {\r\n\t\t\t\tvar that = this;\r\n\t\t\t\tdt.on('length.dt' + conf.namespace, function () {\r\n\t\t\t\t\tthat.text(conf.text);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tdestroy: function (dt, node, conf) {\r\n\t\t\t\tdt.off('length.dt' + conf.namespace);\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\tspacer: {\r\n\t\tstyle: 'empty',\r\n\t\tspacer: true,\r\n\t\ttext: function (dt) {\r\n\t\t\treturn dt.i18n('buttons.spacer', '');\r\n\t\t}\r\n\t}\r\n});\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * DataTables API\r\n *\r\n * For complete documentation, please refer to the docs/api directory or the\r\n * DataTables site\r\n */\r\n\r\n// Buttons group and individual button selector\r\nDataTable.Api.register('buttons()', function (group, selector) {\r\n\t// Argument shifting\r\n\tif (selector === undefined) {\r\n\t\tselector = group;\r\n\t\tgroup = undefined;\r\n\t}\r\n\r\n\tthis.selector.buttonGroup = group;\r\n\r\n\tvar res = this.iterator(\r\n\t\ttrue,\r\n\t\t'table',\r\n\t\tfunction (ctx) {\r\n\t\t\tif (ctx._buttons) {\r\n\t\t\t\treturn Buttons.buttonSelector(\r\n\t\t\t\t\tButtons.instanceSelector(group, ctx._buttons),\r\n\t\t\t\t\tselector\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\ttrue\r\n\t);\r\n\r\n\tres._groupSelector = group;\r\n\treturn res;\r\n});\r\n\r\n// Individual button selector\r\nDataTable.Api.register('button()', function (group, selector) {\r\n\t// just run buttons() and truncate\r\n\tvar buttons = this.buttons(group, selector);\r\n\r\n\tif (buttons.length > 1) {\r\n\t\tbuttons.splice(1, buttons.length);\r\n\t}\r\n\r\n\treturn buttons;\r\n});\r\n\r\n// Active buttons\r\nDataTable.Api.registerPlural(\r\n\t'buttons().active()',\r\n\t'button().active()',\r\n\tfunction (flag) {\r\n\t\tif (flag === undefined) {\r\n\t\t\treturn this.map(function (set) {\r\n\t\t\t\treturn set.inst.active(set.node);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this.each(function (set) {\r\n\t\t\tset.inst.active(set.node, flag);\r\n\t\t});\r\n\t}\r\n);\r\n\r\n// Get / set button action\r\nDataTable.Api.registerPlural(\r\n\t'buttons().action()',\r\n\t'button().action()',\r\n\tfunction (action) {\r\n\t\tif (action === undefined) {\r\n\t\t\treturn this.map(function (set) {\r\n\t\t\t\treturn set.inst.action(set.node);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this.each(function (set) {\r\n\t\t\tset.inst.action(set.node, action);\r\n\t\t});\r\n\t}\r\n);\r\n\r\n// Collection control\r\nDataTable.Api.registerPlural(\r\n\t'buttons().collectionRebuild()',\r\n\t'button().collectionRebuild()',\r\n\tfunction (buttons) {\r\n\t\treturn this.each(function (set) {\r\n\t\t\tfor (var i = 0; i < buttons.length; i++) {\r\n\t\t\t\tif (typeof buttons[i] === 'object') {\r\n\t\t\t\t\tbuttons[i].parentConf = set;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tset.inst.collectionRebuild(set.node, buttons);\r\n\t\t});\r\n\t}\r\n);\r\n\r\n// Enable / disable buttons\r\nDataTable.Api.register(\r\n\t['buttons().enable()', 'button().enable()'],\r\n\tfunction (flag) {\r\n\t\treturn this.each(function (set) {\r\n\t\t\tset.inst.enable(set.node, flag);\r\n\t\t});\r\n\t}\r\n);\r\n\r\n// Disable buttons\r\nDataTable.Api.register(\r\n\t['buttons().disable()', 'button().disable()'],\r\n\tfunction () {\r\n\t\treturn this.each(function (set) {\r\n\t\t\tset.inst.disable(set.node);\r\n\t\t});\r\n\t}\r\n);\r\n\r\n// Button index\r\nDataTable.Api.register('button().index()', function () {\r\n\tvar idx = null;\r\n\r\n\tthis.each(function (set) {\r\n\t\tvar res = set.inst.index(set.node);\r\n\r\n\t\tif (res !== null) {\r\n\t\t\tidx = res;\r\n\t\t}\r\n\t});\r\n\r\n\treturn idx;\r\n});\r\n\r\n// Get button nodes\r\nDataTable.Api.registerPlural(\r\n\t'buttons().nodes()',\r\n\t'button().node()',\r\n\tfunction () {\r\n\t\tvar jq = $();\r\n\r\n\t\t// jQuery will automatically reduce duplicates to a single entry\r\n\t\t$(\r\n\t\t\tthis.each(function (set) {\r\n\t\t\t\tjq = jq.add(set.inst.node(set.node));\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\treturn jq;\r\n\t}\r\n);\r\n\r\n// Get / set button processing state\r\nDataTable.Api.registerPlural(\r\n\t'buttons().processing()',\r\n\t'button().processing()',\r\n\tfunction (flag) {\r\n\t\tif (flag === undefined) {\r\n\t\t\treturn this.map(function (set) {\r\n\t\t\t\treturn set.inst.processing(set.node);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this.each(function (set) {\r\n\t\t\tset.inst.processing(set.node, flag);\r\n\t\t});\r\n\t}\r\n);\r\n\r\n// Get / set button text (i.e. the button labels)\r\nDataTable.Api.registerPlural(\r\n\t'buttons().text()',\r\n\t'button().text()',\r\n\tfunction (label) {\r\n\t\tif (label === undefined) {\r\n\t\t\treturn this.map(function (set) {\r\n\t\t\t\treturn set.inst.text(set.node);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this.each(function (set) {\r\n\t\t\tset.inst.text(set.node, label);\r\n\t\t});\r\n\t}\r\n);\r\n\r\n// Trigger a button's action\r\nDataTable.Api.registerPlural(\r\n\t'buttons().trigger()',\r\n\t'button().trigger()',\r\n\tfunction () {\r\n\t\treturn this.each(function (set) {\r\n\t\t\tset.inst.node(set.node).trigger('click');\r\n\t\t});\r\n\t}\r\n);\r\n\r\n// Button resolver to the popover\r\nDataTable.Api.register('button().popover()', function (content, options) {\r\n\treturn this.map(function (set) {\r\n\t\treturn set.inst._popover(content, this.button(this[0].node), options);\r\n\t});\r\n});\r\n\r\n// Get the container elements\r\nDataTable.Api.register('buttons().containers()', function () {\r\n\tvar jq = $();\r\n\tvar groupSelector = this._groupSelector;\r\n\r\n\t// We need to use the group selector directly, since if there are no buttons\r\n\t// the result set will be empty\r\n\tthis.iterator(true, 'table', function (ctx) {\r\n\t\tif (ctx._buttons) {\r\n\t\t\tvar insts = Buttons.instanceSelector(groupSelector, ctx._buttons);\r\n\r\n\t\t\tfor (var i = 0, ien = insts.length; i < ien; i++) {\r\n\t\t\t\tjq = jq.add(insts[i].container());\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn jq;\r\n});\r\n\r\nDataTable.Api.register('buttons().container()', function () {\r\n\t// API level of nesting is `buttons()` so we can zip into the containers method\r\n\treturn this.containers().eq(0);\r\n});\r\n\r\n// Add a new button\r\nDataTable.Api.register('button().add()', function (idx, conf, draw) {\r\n\tvar ctx = this.context;\r\n\tvar node;\r\n\r\n\t// Don't use `this` as it could be empty - select the instances directly\r\n\tif (ctx.length) {\r\n\t\tvar inst = Buttons.instanceSelector(\r\n\t\t\tthis._groupSelector,\r\n\t\t\tctx[0]._buttons\r\n\t\t);\r\n\r\n\t\tif (inst.length) {\r\n\t\t\tnode = inst[0].add(conf, idx, draw);\r\n\t\t}\r\n\t}\r\n\r\n\treturn node\r\n\t\t? this.button(this._groupSelector, node)\r\n\t\t: this;\r\n});\r\n\r\n// Destroy the button sets selected\r\nDataTable.Api.register('buttons().destroy()', function () {\r\n\tthis.pluck('inst')\r\n\t\t.unique()\r\n\t\t.each(function (inst) {\r\n\t\t\tinst.destroy();\r\n\t\t});\r\n\r\n\treturn this;\r\n});\r\n\r\n// Remove a button\r\nDataTable.Api.registerPlural(\r\n\t'buttons().remove()',\r\n\t'buttons().remove()',\r\n\tfunction () {\r\n\t\tthis.each(function (set) {\r\n\t\t\tset.inst.remove(set.node);\r\n\t\t});\r\n\r\n\t\treturn this;\r\n\t}\r\n);\r\n\r\n// Information box that can be used by buttons\r\nvar _infoTimer;\r\nDataTable.Api.register('buttons.info()', function (title, message, time) {\r\n\tvar that = this;\r\n\r\n\tif (title === false) {\r\n\t\tthis.off('destroy.btn-info');\r\n\t\t_fadeOut($('#datatables_buttons_info'), 400, function () {\r\n\t\t\t$(this).remove();\r\n\t\t});\r\n\t\tclearTimeout(_infoTimer);\r\n\t\t_infoTimer = null;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tif (_infoTimer) {\r\n\t\tclearTimeout(_infoTimer);\r\n\t}\r\n\r\n\tif ($('#datatables_buttons_info').length) {\r\n\t\t$('#datatables_buttons_info').remove();\r\n\t}\r\n\r\n\ttitle = title ? '<h2>' + title + '</h2>' : '';\r\n\r\n\t_fadeIn(\r\n\t\t$('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>')\r\n\t\t\t.html(title)\r\n\t\t\t.append(\r\n\t\t\t\t$('<div/>')[typeof message === 'string' ? 'html' : 'append'](\r\n\t\t\t\t\tmessage\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t\t.css('display', 'none')\r\n\t\t\t.appendTo('body')\r\n\t);\r\n\r\n\tif (time !== undefined && time !== 0) {\r\n\t\t_infoTimer = setTimeout(function () {\r\n\t\t\tthat.buttons.info(false);\r\n\t\t}, time);\r\n\t}\r\n\r\n\tthis.on('destroy.btn-info', function () {\r\n\t\tthat.buttons.info(false);\r\n\t});\r\n\r\n\treturn this;\r\n});\r\n\r\n// Get data from the table for export - this is common to a number of plug-in\r\n// buttons so it is included in the Buttons core library\r\nDataTable.Api.register('buttons.exportData()', function (options) {\r\n\tif (this.context.length) {\r\n\t\treturn _exportData(new DataTable.Api(this.context[0]), options);\r\n\t}\r\n});\r\n\r\n// Get information about the export that is common to many of the export data\r\n// types (DRY)\r\nDataTable.Api.register('buttons.exportInfo()', function (conf) {\r\n\tif (!conf) {\r\n\t\tconf = {};\r\n\t}\r\n\r\n\treturn {\r\n\t\tfilename: _filename(conf, this),\r\n\t\ttitle: _title(conf, this),\r\n\t\tmessageTop: _message(this, conf, conf.message || conf.messageTop, 'top'),\r\n\t\tmessageBottom: _message(this, conf, conf.messageBottom, 'bottom')\r\n\t};\r\n});\r\n\r\n/**\r\n * Get the file name for an exported file.\r\n *\r\n * @param {object} config Button configuration\r\n * @param {object} dt DataTable instance\r\n */\r\nvar _filename = function (config, dt) {\r\n\t// Backwards compatibility\r\n\tvar filename =\r\n\t\tconfig.filename === '*' &&\r\n\t\tconfig.title !== '*' &&\r\n\t\tconfig.title !== undefined &&\r\n\t\tconfig.title !== null &&\r\n\t\tconfig.title !== ''\r\n\t\t\t? config.title\r\n\t\t\t: config.filename;\r\n\r\n\tif (typeof filename === 'function') {\r\n\t\tfilename = filename(config, dt);\r\n\t}\r\n\r\n\tif (filename === undefined || filename === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tif (filename.indexOf('*') !== -1) {\r\n\t\tfilename = filename.replace(/\\*/g, $('head > title').text()).trim();\r\n\t}\r\n\r\n\t// Strip characters which the OS will object to\r\n\tfilename = filename.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, '');\r\n\r\n\tvar extension = _stringOrFunction(config.extension, config, dt);\r\n\tif (!extension) {\r\n\t\textension = '';\r\n\t}\r\n\r\n\treturn filename + extension;\r\n};\r\n\r\n/**\r\n * Simply utility method to allow parameters to be given as a function\r\n *\r\n * @param {undefined|string|function} option Option\r\n * @return {null|string} Resolved value\r\n */\r\nvar _stringOrFunction = function (option, config, dt) {\r\n\tif (option === null || option === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\telse if (typeof option === 'function') {\r\n\t\treturn option(config, dt);\r\n\t}\r\n\treturn option;\r\n};\r\n\r\n/**\r\n * Get the title for an exported file.\r\n *\r\n * @param {object} config\tButton configuration\r\n */\r\nvar _title = function (config, dt) {\r\n\tvar title = _stringOrFunction(config.title, config, dt);\r\n\r\n\treturn title === null\r\n\t\t? null\r\n\t\t: title.indexOf('*') !== -1\r\n\t\t? title.replace(/\\*/g, $('head > title').text() || 'Exported data')\r\n\t\t: title;\r\n};\r\n\r\nvar _message = function (dt, config, option, position) {\r\n\tvar message = _stringOrFunction(option, config, dt);\r\n\tif (message === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar caption = $('caption', dt.table().container()).eq(0);\r\n\tif (message === '*') {\r\n\t\tvar side = caption.css('caption-side');\r\n\t\tif (side !== position) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn caption.length ? caption.text() : '';\r\n\t}\r\n\r\n\treturn message;\r\n};\r\n\r\nvar _exportTextarea = $('<textarea/>')[0];\r\nvar _exportData = function (dt, inOpts) {\r\n\tvar config = $.extend(\r\n\t\ttrue,\r\n\t\t{},\r\n\t\t{\r\n\t\t\trows: null,\r\n\t\t\tcolumns: '',\r\n\t\t\tmodifier: {\r\n\t\t\t\tsearch: 'applied',\r\n\t\t\t\torder: 'applied'\r\n\t\t\t},\r\n\t\t\torthogonal: 'display',\r\n\t\t\tstripHtml: true,\r\n\t\t\tstripNewlines: true,\r\n\t\t\tdecodeEntities: true,\r\n\t\t\tescapeExcelFormula: false,\r\n\t\t\ttrim: true,\r\n\t\t\tformat: {\r\n\t\t\t\theader: function (d) {\r\n\t\t\t\t\treturn Buttons.stripData(d, config);\r\n\t\t\t\t},\r\n\t\t\t\tfooter: function (d) {\r\n\t\t\t\t\treturn Buttons.stripData(d, config);\r\n\t\t\t\t},\r\n\t\t\t\tbody: function (d) {\r\n\t\t\t\t\treturn Buttons.stripData(d, config);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcustomizeData: null,\r\n\t\t\tcustomizeZip: null\r\n\t\t},\r\n\t\tinOpts\r\n\t);\r\n\r\n\tvar header = dt\r\n\t\t.columns(config.columns)\r\n\t\t.indexes()\r\n\t\t.map(function (idx) {\r\n\t\t\tvar col = dt.column(idx);\r\n\t\t\treturn config.format.header(col.title(), idx, col.header());\r\n\t\t})\r\n\t\t.toArray();\r\n\r\n\tvar footer = dt.table().footer()\r\n\t\t? dt\r\n\t\t\t\t.columns(config.columns)\r\n\t\t\t\t.indexes()\r\n\t\t\t\t.map(function (idx) {\r\n\t\t\t\t\tvar el = dt.column(idx).footer();\r\n\t\t\t\t\tvar val = '';\r\n\r\n\t\t\t\t\tif (el) {\r\n\t\t\t\t\t\tvar inner = $('.dt-column-title', el);\r\n\r\n\t\t\t\t\t\tval = inner.length\r\n\t\t\t\t\t\t\t? inner.html()\r\n\t\t\t\t\t\t\t: $(el).html();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn config.format.footer(val, idx, el);\r\n\t\t\t\t})\r\n\t\t\t\t.toArray()\r\n\t\t: null;\r\n\r\n\t// If Select is available on this table, and any rows are selected, limit the export\r\n\t// to the selected rows. If no rows are selected, all rows will be exported. Specify\r\n\t// a `selected` modifier to control directly.\r\n\tvar modifier = $.extend({}, config.modifier);\r\n\tif (\r\n\t\tdt.select &&\r\n\t\ttypeof dt.select.info === 'function' &&\r\n\t\tmodifier.selected === undefined\r\n\t) {\r\n\t\tif (\r\n\t\t\tdt.rows(config.rows, $.extend({ selected: true }, modifier)).any()\r\n\t\t) {\r\n\t\t\t$.extend(modifier, { selected: true });\r\n\t\t}\r\n\t}\r\n\r\n\tvar rowIndexes = dt.rows(config.rows, modifier).indexes().toArray();\r\n\tvar selectedCells = dt.cells(rowIndexes, config.columns, {\r\n\t\torder: modifier.order\r\n\t});\r\n\tvar cells = selectedCells.render(config.orthogonal).toArray();\r\n\tvar cellNodes = selectedCells.nodes().toArray();\r\n\tvar cellIndexes = selectedCells.indexes().toArray();\r\n\r\n\tvar columns = dt.columns(config.columns).count();\r\n\tvar rows = columns > 0 ? cells.length / columns : 0;\r\n\tvar body = [];\r\n\tvar cellCounter = 0;\r\n\r\n\tfor (var i = 0, ien = rows; i < ien; i++) {\r\n\t\tvar row = [columns];\r\n\r\n\t\tfor (var j = 0; j < columns; j++) {\r\n\t\t\trow[j] = config.format.body(\r\n\t\t\t\tcells[cellCounter],\r\n\t\t\t\tcellIndexes[cellCounter].row,\r\n\t\t\t\tcellIndexes[cellCounter].column,\r\n\t\t\t\tcellNodes[cellCounter]\r\n\t\t\t);\r\n\t\t\tcellCounter++;\r\n\t\t}\r\n\r\n\t\tbody[i] = row;\r\n\t}\r\n\r\n\tvar data = {\r\n\t\theader: header,\r\n\t\theaderStructure: _headerFormatter(\r\n\t\t\tconfig.format.header,\r\n\t\t\tdt.table().header.structure(config.columns)\r\n\t\t),\r\n\t\tfooter: footer,\r\n\t\tfooterStructure: _headerFormatter(\r\n\t\t\tconfig.format.footer,\r\n\t\t\tdt.table().footer.structure(config.columns)\r\n\t\t),\r\n\t\tbody: body\r\n\t};\r\n\r\n\tif (config.customizeData) {\r\n\t\tconfig.customizeData(data);\r\n\t}\r\n\r\n\treturn data;\r\n};\r\n\r\nfunction _headerFormatter(formatter, struct) {\r\n\tfor (var i=0 ; i<struct.length ; i++) {\r\n\t\tfor (var j=0 ; j<struct[i].length ; j++) {\r\n\t\t\tvar item = struct[i][j];\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\titem.title = formatter(\r\n\t\t\t\t\titem.title,\r\n\t\t\t\t\tj,\r\n\t\t\t\t\titem.cell\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn struct;\r\n}\r\n\r\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\r\n * DataTables interface\r\n */\r\n\r\n// Attach to DataTables objects for global access\r\n$.fn.dataTable.Buttons = Buttons;\r\n$.fn.DataTable.Buttons = Buttons;\r\n\r\n// DataTables creation - check if the buttons have been defined for this table,\r\n// they will have been if the `B` option was used in `dom`, otherwise we should\r\n// create the buttons instance here so they can be inserted into the document\r\n// using the API. Listen for `init` for compatibility with pre 1.10.10, but to\r\n// be removed in future.\r\n$(document).on('init.dt plugin-init.dt', function (e, settings) {\r\n\tif (e.namespace !== 'dt') {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar opts = settings.oInit.buttons || DataTable.defaults.buttons;\r\n\r\n\tif (opts && !settings._buttons) {\r\n\t\tnew Buttons(settings, opts).container();\r\n\t}\r\n});\r\n\r\nfunction _init(settings, options) {\r\n\tvar api = new DataTable.Api(settings);\r\n\tvar opts = options\r\n\t\t? options\r\n\t\t: api.init().buttons || DataTable.defaults.buttons;\r\n\r\n\treturn new Buttons(api, opts).container();\r\n}\r\n\r\n// DataTables 1 `dom` feature option\r\nDataTable.ext.feature.push({\r\n\tfnInit: _init,\r\n\tcFeature: 'B'\r\n});\r\n\r\n// DataTables 2 layout feature\r\nif (DataTable.feature) {\r\n\tDataTable.feature.register('buttons', _init);\r\n}\r\n\r\n\r\nexport default DataTable;\r\n"],
  "mappings": "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",
  "names": ["jQuery", "dt", "button", "config", "top", "elements", "i", "ien", "selector", "inst"]
}
